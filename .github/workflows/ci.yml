name: AIOps Platform CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ '*' ]

env:
  PYTHON_VERSION: '3.10'
  PIP_CACHE_DIR: ~/.cache/pip
  POETRY_CACHE_DIR: ~/.cache/poetry

jobs:
  lint-test:
    name: Lint and Test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          ${{ env.PIP_CACHE_DIR }}
          ${{ env.POETRY_CACHE_DIR }}
        key: ${{ runner.os }}-py${{ env.PYTHON_VERSION }}-${{ hashFiles('pyproject.toml') }}
        
    - name: Install dependencies
      run: |
        pip install poetry
        poetry install --no-interaction
        
    - name: Lint with flake8
      run: |
        poetry run flake8 src tests --count --show-source --statistics
        
    - name: Format check with Black
      run: |
        poetry run black --check src tests
        
    - name: Run tests with pytest
      run: |
        poetry run pytest -v tests/ --cov=src --cov-report=xml
        
    - name: Upload coverage
      uses: codecov/codecov-action@v3

  build-docker:
    name: Build and Push Docker Image
    needs: lint-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v4
    
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Build and push
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: |
          ghcr.io/${{ github.repository }}:latest
          ghcr.io/${{ github.repository }}:${{ github.sha }}
          
  release:
    name: Create Release
    needs: build-docker
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        generate_release_notes: true
        files: |
          dist/*
